.TH "/home/mbakmaz/bytelab2024/final_task/mashina/components/button/platform/inc/button_gpio.h" 3 "Version ." "Mashina" \" -*- nroff -*-
.ad l
.nh
.SH NAME
/home/mbakmaz/bytelab2024/final_task/mashina/components/button/platform/inc/button_gpio.h \- See the source file\&.  

.SH SYNOPSIS
.br
.PP
\fR#include <stdio\&.h>\fP
.br
\fR#include <stdbool\&.h>\fP
.br

.SS "Typedefs"

.in +1c
.ti -1c
.RI "typedef void(* \fBbtn_gpio_pressed_t\fP) (void *)"
.br
.ti -1c
.RI "typedef struct \fB_button_gpio_t\fP \fBbutton_gpio_t\fP"
.br
.in -1c
.SS "Functions"

.in +1c
.ti -1c
.RI "\fBbutton_gpio_t\fP * \fBbutton_gpio_create\fP (uint8_t pin, bool b_is_active_on_high_level, \fBbtn_gpio_pressed_t\fP p_button_pressed_cb)"
.br
.RI "It creates a button object and initializes it\&. "
.ti -1c
.RI "void \fBbutton_gpio_delete\fP (\fBbutton_gpio_t\fP *p_btn)"
.br
.RI "This function frees the memory allocated for the button_gpio_t structure\&. "
.ti -1c
.RI "bool \fBbutton_gpio_is_pressed\fP (\fBbutton_gpio_t\fP *p_btn)"
.br
.RI "This function checks if the button is pressed\&. "
.in -1c
.SH "Detailed Description"
.PP 
See the source file\&. 


.PP
\fB\fP
.RS 4

.RE
.PP
COPYRIGHT NOTICE: (c) 2022 Byte Lab Grupa d\&.o\&.o\&. All rights reserved\&. 
.SH "Typedef Documentation"
.PP 
.SS "typedef void(* btn_gpio_pressed_t) (void *)"

.SS "typedef struct \fB_button_gpio_t\fP \fBbutton_gpio_t\fP"

.SH "Function Documentation"
.PP 
.SS "\fBbutton_gpio_t\fP * button_gpio_create (uint8_t pin, bool b_is_active_on_high_level, \fBbtn_gpio_pressed_t\fP p_button_pressed_cb)"

.PP
It creates a button object and initializes it\&. 
.PP
\fBParameters\fP
.RS 4
\fIpin\fP The GPIO pin number that the button is connected to\&. 
.br
\fIb_is_active_on_high_level\fP If true, the button is active when the GPIO is high\&. If false, the button is active when the GPIO is low\&. 
.br
\fIp_button_pressed_cb\fP This is the callback function that will be called when the button is pressed\&.
.RE
.PP
\fBReturns\fP
.RS 4
A pointer to a button_gpio_t struct\&. 
.RE
.PP

.SS "void button_gpio_delete (\fBbutton_gpio_t\fP * p_btn)"

.PP
This function frees the memory allocated for the button_gpio_t structure\&. 
.PP
\fBParameters\fP
.RS 4
\fIp_btn\fP A pointer to the button_gpio_t structure that was created by the \fBbutton_gpio_create()\fP function\&. 
.RE
.PP

.SS "bool button_gpio_is_pressed (\fBbutton_gpio_t\fP * p_btn)"

.PP
This function checks if the button is pressed\&. 
.PP
\fBParameters\fP
.RS 4
\fIp_btn\fP A pointer to the button_gpio_t structure that was created in the previous step\&.
.RE
.PP
\fBReturns\fP
.RS 4
True if the button is pressed, false otherwise\&. 
.RE
.PP

.SH "Author"
.PP 
Generated automatically by Doxygen for Mashina from the source code\&.
